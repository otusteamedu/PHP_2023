# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx only upstream
  nginx-upstream:
    build:
      context: docker/nginx-upstream
      dockerfile: Dockerfile
    image: balancer/nginx
    container_name: nginx-upstream
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./src:/data/mysite.balancer
      - ./docker/nginx-upstream/hosts/mysite.balancer.conf:/etc/nginx/nginx.conf
    depends_on:
      - nginx-web1
      - nginx-web2
    networks:
      - app-network

  nginx-web1:
    build:
      context: docker/nginx-upstream
      dockerfile: Dockerfile
    image: balancer/nginx-web1
    container_name: nginx-web1
    # проброс портов
    ports:
      - "8081:80"
    volumes:
      - ./src:/data/mysite.balancer
      - ./docker/nginx-web/hosts:/etc/nginx/conf.d
    networks:
      - app-network

  nginx-web2:
    build:
      context: docker/nginx-upstream
      dockerfile: Dockerfile
    image: balancer/nginx-web2
    container_name: nginx-web2
    # проброс портов
    ports:
      - "8082:80"
    volumes:
      - ./src:/data/mysite.balancer
      - ./docker/nginx-web/hosts:/etc/nginx/conf.d
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: docker/fpm
      dockerfile: Dockerfile
    image: balancer/php # имя будущего образа
    container_name: app1 # имя контейнера после запуска
    volumes:
       - ./src:/data/mysite.balancer
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: docker/fpm
      dockerfile: Dockerfile
    image: balancer/php # имя будущего образа
    container_name: app2 # имя контейнера после запуска
    volumes:
      - ./src:/data/mysite.balancer
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - '11212:11211'
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
