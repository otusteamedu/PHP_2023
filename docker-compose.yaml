version: "3"

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./code:/data/app.local
      - php-fpm-socket:/var/run/d-socket
    networks:
      - app-network
  #Контейнер с PHP-FPM, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    volumes:
      - ./code:/data/app.local
      - php-fpm-socket:/var/run/d-socket
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - app-network
  memcache:
    image: memcached:alpine
    container_name: memcache
    ports:
      - "11211:11211"
  pgsql:
    image: postgres:14
    restart: always
    container_name: pgsql
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - ./database:/docker-entrypoint-initdb.d/
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  database:
  php-fpm-socket:
