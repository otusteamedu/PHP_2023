version: '3'

services:
  php:
    build:
      args:
        uid: $USER_UID
        user: $USER_NAME
      context: docker
      dockerfile: Dockerfile-php
    image: '${DOCKER_PREFIX}/php'
    container_name: '${DOCKER_PREFIX}-php'
    restart: unless-stopped
    volumes:
      - ./app:/var/www/app
    networks:
      - hw28-network
  nginx:
    image: nginx:1.23.3-alpine
    container_name: '${DOCKER_PREFIX}-nginx'
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./app:/var/www/app
      - ./docker/nginx-conf:/etc/nginx/conf.d
    networks:
      - hw28-network
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: '${DOCKER_PREFIX}-rabbitmq'
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_USER}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_PASSWORD}'
    ports:
      - '15672:15672'
    networks:
      - hw28-network
  php-worker-exec:
    build:
      args:
        uid: $USER_UID
        user: $USER_NAME
      context: docker
      dockerfile: Dockerfile-php-worker-exec
    image: '${DOCKER_PREFIX}/php-worker-exec'
    container_name: '${DOCKER_PREFIX}-php-worker-exec'
    restart: unless-stopped
    volumes:
      - ./app:/var/www/app
    networks:
      - hw28-network
  php-worker-notify:
    build:
      args:
        uid: $USER_UID
        user: $USER_NAME
      context: docker
      dockerfile: Dockerfile-php-worker-notify
    image: '${DOCKER_PREFIX}/php-worker-notify'
    container_name: '${DOCKER_PREFIX}-php-worker-notify'
    restart: unless-stopped
    volumes:
      - ./app:/var/www/app
    networks:
      - hw28-network
volumes:
  socket:
networks:
  hw28-network:
    driver: bridge
