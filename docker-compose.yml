version: "3.8"

services:
  application:
    build:
      dockerfile: .docker/php/Dockerfile
      context: ./
      target: app_php
      args:
        UNAME: ${UNAME}
        UGROUP: ${UGROUP}
        UID: ${APP_UID}
        GID: ${APP_GID}
    environment:
      REDIS_HOST: ${REDIS_HOST:?provide elastic host to .env}
      REDIS_PORT: ${REDIS_PORT:?provide elastic name to .env}
      ELASTIC_HOST: ${ELASTIC_HOST:?provide elastic name to .env}
      ELASTIC_PORT: ${ELASTIC_PORT:?provide elastic name to .env}
      ELASTIC_USER: ${ELASTIC_USER:?provide elastic user to .env}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:?provide elastic password to .env}
      ELASTIC_INDEX: ${ELASTIC_INDEX:?provide elastic index to .env}
      OTEL_PHP_AUTOLOAD_ENABLED: true
      OTEL_SERVICE_NAME: redis-php-application
      OTEL_TRACES_EXPORTER: otlp
      OTEL_METRICS_EXPORTER: otlp
      OTEL_LOGS_EXPORTER: otlp
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_PROPAGATORS: baggage,tracecontext
    networks:
      - otus-redis
    command: "bin/rr serve"
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    networks:
      - otus-redis
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 500ms
      timeout: 1s

  elasticsearch:
    build:
      context: .docker/elasticsearch
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./.docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - redis-elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    networks:
      - otus-redis
    healthcheck:
      test: "curl --fail http://localhost:9200 -u ${ELASTIC_USER}:${ELASTIC_PASSWORD} || exit 1"
      interval: 10s
      timeout: 10s
      retries: 120
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector:0.61.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./.docker/otel-collector/otel-collector.yaml:/etc/otel-collector.yaml
    networks:
      - otus-redis

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./.docker/tempo/tempo.yaml:/etc/tempo.yaml
      - redis-tempo-data:/tmp/tempo
    networks:
      - otus-redis
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./.docker/prometheus/prometheus.yaml:/etc/prometheus.yaml
    networks:
      - otus-redis
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./.docker/grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    networks:
      - otus-redis
    ports:
      - "3000:3000"

networks:
  otus-redis:
    driver: bridge

volumes:
  redis-elasticsearch:
  redis-tempo-data: