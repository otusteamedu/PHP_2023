# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: otus_webserver
    # проброс портов
    ports:
      - "80:80"
    volumes:
       - ./code:/data/mysite.local
       - ./socket:/var/run/
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  php-fpm:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: otus_php-fpm # имя контейнера после запуска
    volumes:
       - ./code:/data/mysite.local
       - ./socket:/var/run/
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #База данных
  db:
    container_name: otus_db
    image: mariadb:10.5
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    restart: always
    networks:
      - app-network
    expose:
      - 3306
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - otus_db:/var/lib/mysql

  #контейнер с Memcached
  memcached:
    image: memcached:latest
    container_name: otus_memcached
    networks:
      - app-network

  #контейнер с Redis
  redis:
    image: redis:latest
    container_name: otus_redis
    networks:
      - app-network


#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  otus_db:
    external: true