# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  balancer:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx-balancer
    depends_on:
      - nginx1
      - nginx2
    container_name: balancer
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./nginx/hosts/balancer.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  #контейнер с Nginx
  nginx1:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx1
    container_name: nginx1
    volumes:
       - ./src:/data/mysite.local
       - ./nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/mysite.local.conf
       - socket1:/socket1
       - socket2:/socket2
    networks:
      - app-network

  #контейнер с Nginx
  nginx2:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx2
    container_name: nginx2
    volumes:
       - ./src:/data/mysite.local
       - ./nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/mysite.local.conf
       - socket1:/socket1
       - socket2:/socket2
    networks:
      - app-network

  #Контейнер с PHP-FPM
  fpm1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php1 # имя будущего образа
    container_name: '${COMPOSE_PROJECT_NAME}_fpm1' # имя контейнера после запуска
    volumes:
       - ./src:/data/mysite.local
       - socket1:/var/run/
    env_file:
      - .env
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #Контейнер с PHP-FPM
  fpm2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php2 # имя будущего образа
    container_name: '${COMPOSE_PROJECT_NAME}_fpm2' # имя контейнера после запуска
    volumes:
       - ./src:/data/mysite.local
       - socket2:/var/run/
    env_file:
      - .env
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  memcached:
    image: 'bitnami/memcached:latest'
    container_name: '${COMPOSE_PROJECT_NAME}_memcached'
    ports:
      - '${MEMCACHED_PORT:-11211}:11211'
    networks:
      - app-network

volumes:
  socket1:
  socket2:

#Docker Networks
networks:
  app-network:
    driver: bridge