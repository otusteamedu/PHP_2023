version: '3'
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    image: mysql/mysql-server
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/db:/var/lib/mysql
    networks:
      - app-network
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: redis
    container_name: redis
    networks:
      - app-network
  memcached:
    build:
      context: ./memcashed
      dockerfile: Dockerfile
    image: memcached
    container_name: memcached
    networks:
      - app-network

networks:
  app-network:
    driver: bridge