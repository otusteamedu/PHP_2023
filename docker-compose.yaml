version: '3'


services:
  otus-hw-nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: hw20/nginx
    container_name: mysite.local
    ports:
      - "80:80"
    volumes:
       - ./rest_api_code:/data/mysite.local
       - ./data/statements:/data/mysite.local/public/statements
    networks:
      - app-network


  otus-hw-rest-api:
    build:
      context: ./rest_api
      dockerfile: Dockerfile
    image: hw20/rest-api
    container_name: otus-hw-rest-api
    expose:
      - "9003"
    volumes:
       - ./rest_api_code:/data/mysite.local
       - ./data/statements:/data/mysite.local/public/statements
    networks:
      - app-network

  otus-hw-worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    image: hw20/worker
    container_name: otus-hw-worker
    volumes:
       - ./worker_code:/data/mysite.local
       - ./data/statements:/data/mysite.local/public/statements
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.7.5-management
    working_dir: /app
    hostname: ${RABBITMQ_HOST_NAME}
    container_name: 'rabbitmq'
    ports:
      - ${RABBITMQ_ADMIN_PANEL_PORT}:15672
      - ${RABBITMQ_PORT}:5672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - app-network


  otus-hw-postgres:
    image: postgres
    container_name: otus-hw-postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./data/postgresql/:/var/lib/postgresql/data


networks:
  app-network:
    driver: bridge