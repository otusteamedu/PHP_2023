version: '3.8'

services:
  server-balancer:
    build:
      context: ${SERVER_BALANCER_CONTEXT}
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}/server-balancer
    container_name: server-balancer
    restart: always
    depends_on:
      - server-1
      - server-2
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - app-network

  server-main:
    build:
      context: ${SERVER_NGINX_CONTEXT}
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}/server-nginx
    deploy:
      replicas: 0


  server-1:
    image: ${PROJECT_NAME}/server-nginx
    container_name: server-1
    restart: always
    depends_on:
      - db
      - memcached
    volumes:
      - ${PROJECT_PATH}
    networks:
      - app-network

  server-2:
    image: ${PROJECT_NAME}/server-nginx
    container_name: server-2
    restart: always
    depends_on:
      - db
      - memcached
    volumes:
      - ${PROJECT_PATH}
    networks:
      - app-network

  app-main:
    build:
      context: ${PHP_CONTEXT}
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}/php
    deploy:
      replicas: 0
    networks:
      - app-network

  app1:
    image: ${PROJECT_NAME}/php
    container_name: app1
    volumes:
       - ${PROJECT_PATH}
    depends_on:
      - server-balancer
    networks:
      - app-network

  app2:
    image: ${PROJECT_NAME}/php
    container_name: app2
    depends_on:
      - server-balancer
    volumes:
      - ${PROJECT_PATH}
    networks:
      - app-network

  memcached:
    image: memcached:${MEMCACHED_VERSION}
    container_name: memcached
    restart: always
    ports:
      - ${MEMCACHED_PORT}:${MEMCACHED_PORT}
    networks:
      - app-network

  db:
    image: mysql:${DB_VERSION}
    container_name: db
    restart: always
    volumes:
      - ${DB_PATH}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
