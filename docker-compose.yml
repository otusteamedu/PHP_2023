services:
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
      - ./fpm/docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
    command: ["php-fpm", "--fpm-config", "/usr/local/etc/php-fpm.d/zz-docker.conf"]


    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: 123123
      MYSQL_DATABASE: hw1
      MYSQL_USER: user
      MYSQL_PASSWORD: 123123
    ports:
      - "3306:3306"
    networks:
      - app-network
#Docker Networks
networks:
  app-network:
    driver: bridge
