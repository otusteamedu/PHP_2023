# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build: #Как билдить image
      context: ./nginx #Путь до файла (директориально - контекст)
      dockerfile: Dockerfile #путь от директории контекста до докерфайла
    image: myapp/nginx #Название образа, пример: docker build -t "myapp/nginx"
    container_name: webserver #Название имени контейнера - нужно для локальной сети
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./code:/data/mysite.local #хостовая папка : виртуальная папка - монтирование
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network


  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - "11211:11211"
    networks:
      - app-network

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
      - ./dbdata/mysql:/var/lib/mysql/
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge