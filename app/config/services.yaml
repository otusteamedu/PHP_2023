# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Infrastructure\EventListener\JsonRequestTransformerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 100 }

    App\Infrastructure\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: -100 }

    App\Application\Middleware\IpBlackListMiddleware:
        tags:
            - { name: 'app.middleware', priority: 200 }
        arguments:
            $blackListIpAddresses: '%env(json:BLACK_LIST_IP_ADDRESSES)%'

    App\Application\Middleware\RateLimitMiddleware:
        tags:
            - { name: 'app.middleware', priority: 100 }

    App\Infrastructure\Middleware\MiddlewareResolver:
        arguments:
            $middlewares: !tagged_iterator app.middleware
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 200 }

    App\Application\Presenter\NewsPresenter:
        arguments:
            $contentDecorators: [
                'App\Application\Decorator\Content\TimeToReadContentDecorator',
                'App\Application\Decorator\Content\ShareLinkContentDecorator'
            ]

    App\Application\Observer\EmailNotificationSubscriber:
        tags:
            - { name: 'app.subscriber', priority: 200 }

    App\Application\Observer\Publisher:
        arguments:
            $subscribers: !tagged_iterator app.subscriber

    App\Infrastructure\Component\RateLimiter\RateLimiter:
        arguments:
            $limit: '%env(int:RATE_LIMIT)%'

    Redis:
        class: \Redis
        calls:
            - connect:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'
