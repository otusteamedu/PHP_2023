# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx_lb
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx_lb
    # проброс портов
    ports:
      - "80:80"
    depends_on:
      - nginx2
      - nginx1
    networks:
      - app-network

  nginx1:
    build:
      context: ./nginx1
      dockerfile: Dockerfile
    container_name: nginx1
    ports:
      - "8081:80"
    depends_on:
      - app1
    volumes:
      - ./code:/data/mysite1.local
    networks:
      - app-network

  nginx2:
    build:
      context: ./nginx2
      dockerfile: Dockerfile
    container_name: nginx2
    ports:
      - "8082:80"
    depends_on:
      - app2
    volumes:
      - ./code:/data/mysite2.local
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app1
  app1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    container_name: app1 # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite1.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app2
  app2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    container_name: app2 # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite2.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  # Контейнер с memcached
  memcached:
    container_name: memcached
    image: memcached:1.6.17
    ports:
      - "11211:11211"
    environment:
      MEMCACHED_HOST: ${MEMCACHED_HOST}
      MEMCACHED_PORT: ${MEMCACHED_PORT}
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
