version: '3'

services:
  balancer:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    image: myapp/nginx-balancer
    container_name: balancer
    ports:
      - "80:80"
    volumes:
       - ./app/:/var/www/mysite.local
       - ./images/nginx/hosts/nginx.balancer.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - webserver1
      - webserver2
    networks:
      - app-network
  
  webserver1:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    image: myapp/nginx-webserver
    container_name: webserver1
    volumes:
       - ./app/:/var/www/mysite.local
       - ./images/nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/default.conf

    depends_on:
      - app1
      - app2
    networks:
      - app-network
  webserver2:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    image: myapp/nginx-webserver
    container_name: webserver2
    volumes:
       - ./app/:/var/www/mysite.local
       - ./images/nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app1
      - app2
    networks:
      - app-network

  app1:
    build:
      context: ./images/fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app1
    volumes:
       - ./app/:/var/www/mysite.local
    networks:
      - app-network
  app2:
    build:
      context: ./images/fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app2
    volumes:
       - ./app/:/var/www/mysite.local
    networks:
      - app-network
      
  memcached:
    image: memcached:alpine
    container_name: memcached
    networks:
      - app-network

networks:
  app-network:
    driver: bridge