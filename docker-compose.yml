version: '3'

services:
  app1:
    build:
      context: ./images/fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network
  app2:
    build:
      context: ./images/fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network

  balancer:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network
  
  webserver1:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network
  webserver2:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network

  mysql:
    image: mysql:8.2.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysqldata:/var/lib/mysql  
    networks:
      - app-network
      
  memcached:
    image: memcached:alpine
    container_name: memcached
    networks:
      - app-network

networks:
  app-network:
    driver: bridge