version: '3'

services:

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx
    ports:
      - '${APP_PORT}:80'
    volumes:
       - ./project:/data/application.local
       - ./nginx/hosts/application.local.conf:/etc/nginx/conf.d/application.local.conf
       - ../logs:/var/log/nginx/application
    networks:
      - otus-network

  nginx1:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx1
    volumes:
      - ./project:/data/application.local
      - ./nginx/hosts/nginx1.conf:/etc/nginx/conf.d/nginx1.conf
      - ../logs:/var/log/nginx/application
    networks:
      - otus-network

  nginx2:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx2
    volumes:
      - ./project:/data/application.local
      - ./nginx/hosts/nginx2.conf:/etc/nginx/conf.d/nginx2.conf
      - ../logs:/var/log/nginx/application
    networks:
      - otus-network

  app1:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app1
    environment:
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_DATABASE: '${DB_DATABASE}'
    volumes:
       - ./project:/data/application.local
       - ./fpm/php.ini:/usr/local/etc/php/conf.d/php-application.ini
    networks:
      - otus-network

  app2:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app2
    environment:
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_DATABASE: '${DB_DATABASE}'
    volumes:
      - ./project:/data/application.local
      - ./fpm/php.ini:/usr/local/etc/php/conf.d/php-application.ini
    networks:
      - otus-network

  postgres:
    image: postgres
    container_name: otus-postgres
    environment:
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
    volumes:
      - ../db-data:/var/lib/postgresql/data
    networks:
      - otus-network

  memcache:
    image: memcached
    container_name: otus-memcached
    networks:
      - otus-network

networks:
  otus-network:
    driver: bridge
