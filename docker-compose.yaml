version: '3'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - '${NGINX_PORT}:80'
    networks:
      - app-network

  nginx-1:
    build:
      context: ./nginx1
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver1
    ports:
      - '${NGINX_PORT_1}:80'
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  nginx-2:
    build:
      context: ./nginx2
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver2
    ports:
      - '${NGINX_PORT_2}:80'
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  app:
    build:
      context: ./fpm1
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app
    environment:
      FPM_HOST: app
      FPM_PORT: 9000
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  app-2:
    build:
      context: ./fpm2
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app2
    environment:
      FPM_HOST: app-2
      FPM_PORT: 9000
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  mysql:
    container_name: mysql
    image: mysql:8
    command: mysqld --sql_mode=""
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
    volumes:
      - ./storage-for-images/mysql:/var/lib/mysql
    networks:
      - app-network

  memcached:
    container_name: memcached
    image: memcached
    ports:
      - "11211:11211"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
