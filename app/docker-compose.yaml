version: "3"

services:
  nginx-balancer:
    build:
      context: ./balancer
      dockerfile: Dockerfile
    container_name: nginx-balancer
    ports:
      - "80:80"
    volumes:
      - ./nginx/hosts:/etc/nginx/conf.d
    depends_on:
      - nginx-1
      - nginx-2
    networks:
      - app-network

  nginx-1:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-1
    volumes:
      - ./www:/var/www
    depends_on:
      - php-fpm-1
      - php-fpm-2
    networks:
      - app-network

  nginx-2:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-2
    volumes:
      - ./www:/var/www
    depends_on:
      - php-fpm-1
      - php-fpm-2
    networks:
      - app-network

  php-fpm-1:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: hw4/php-php
    container_name: php-fpm-1
    volumes:
      - ./www:/var/www
    networks:
      - app-network

  php-fpm-2:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: hw4/php-php
    container_name: php-fpm-2
    volumes:
      - ./www:/var/www
    networks:
      - app-network

  redis:
    image: redis
    container_name: ${REDIS_CONTAINER}
    ports:
      - "6379:6379"
    networks:
      - app-network

  memcached:
    image: memcached
    container_name: ${MEMCACHED_CONTAINER}
    ports:
      - "11211:11211"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER}
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./pgsql:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
